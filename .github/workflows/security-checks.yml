name: Security Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Ejecutar cada domingo a medianoche

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security scan
        run: npm run security:scan
        continue-on-error: true
      
      - name: Run npm audit
        run: npm audit --json > npm-audit.json
        continue-on-error: true
      
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            security-reports/
            npm-audit.json
          retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: critical

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.42.0
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
        continue-on-error: true

  owasp-zap-scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'  # Solo ejecutar en el cron programado
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'https://example.com'  # Reemplazar con ${{ secrets.DEPLOYMENT_URL }} cuando estÃ© configurado
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
        continue-on-error: true

  security-report:
    name: Generate Security Report
    needs: [security-scan, dependency-review, codeql-analysis, secret-scanning]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download security reports
        uses: actions/download-artifact@v3
        with:
          name: security-reports
          path: security-reports
        continue-on-error: true
      
      - name: Generate report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "Generated on: $(date)" >> security-report.md
          echo "" >> security-report.md
          
          echo "## NPM Audit Results" >> security-report.md
          if [ -f "security-reports/npm-audit.json" ]; then
            echo "\`\`\`" >> security-report.md
            cat security-reports/npm-audit.json | jq -r '.metadata.vulnerabilities' >> security-report.md
            echo "\`\`\`" >> security-report.md
          else
            echo "No npm audit results found." >> security-report.md
          fi
          
          echo "" >> security-report.md
          echo "## Security Scan Results" >> security-report.md
          if [ -d "security-reports" ]; then
            ls -la security-reports >> security-report.md
          else
            echo "No security scan results found." >> security-report.md
          fi
      
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 30
